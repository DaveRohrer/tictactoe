// const {
//   board,
//   letters,
//   insertLetter,
//   insertSelectBoarder,
//   insertBoardState,
//   setSelectorCharacterIndex,
// } = require("./view");

// describe("insertLetter()", () => {
//   it("can place ascii art xs in the bottom row correctly", () => {
//     const resultString = `╔══════════╦══════════╦══════════╗
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░██╗░░██╗░║░██╗░░██╗░║░██╗░░██╗░║
// ║░╚██╗██╔╝░║░╚██╗██╔╝░║░╚██╗██╔╝░║
// ║░░╚███╔╝░░║░░╚███╔╝░░║░░╚███╔╝░░║
// ║░░██╔██╗░░║░░██╔██╗░░║░░██╔██╗░░║
// ║░██╔╝╚██╗░║░██╔╝╚██╗░║░██╔╝╚██╗░║
// ║░╚═╝░░╚═╝░║░╚═╝░░╚═╝░║░╚═╝░░╚═╝░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╚══════════╩══════════╩══════════╝`;
//     let boardWithXInserts = insertLetter(board, { x: 2, y: 2 }, letters["x"]);
//     boardWithXInserts = insertLetter(
//       boardWithXInserts,
//       { x: 1, y: 2 },
//       letters["x"]
//     );
//     boardWithXInserts = insertLetter(
//       boardWithXInserts,
//       { x: 0, y: 2 },
//       letters["x"]
//     );
//     expect(boardWithXInserts).toEqual(resultString);
//   });

//   it("can place ascii art xs in the middle row correctly", () => {
//     const resultString = `╔══════════╦══════════╦══════════╗
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░██╗░░██╗░║░██╗░░██╗░║░██╗░░██╗░║
// ║░╚██╗██╔╝░║░╚██╗██╔╝░║░╚██╗██╔╝░║
// ║░░╚███╔╝░░║░░╚███╔╝░░║░░╚███╔╝░░║
// ║░░██╔██╗░░║░░██╔██╗░░║░░██╔██╗░░║
// ║░██╔╝╚██╗░║░██╔╝╚██╗░║░██╔╝╚██╗░║
// ║░╚═╝░░╚═╝░║░╚═╝░░╚═╝░║░╚═╝░░╚═╝░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╚══════════╩══════════╩══════════╝`;
//     let boardWithXInserts = insertLetter(board, { x: 2, y: 1 }, letters["x"]);
//     boardWithXInserts = insertLetter(
//       boardWithXInserts,
//       { x: 1, y: 1 },
//       letters["x"]
//     );
//     boardWithXInserts = insertLetter(
//       boardWithXInserts,
//       { x: 0, y: 1 },
//       letters["x"]
//     );
//     expect(boardWithXInserts).toEqual(resultString);
//   });

//   it("can place ascii art xs in the top row correctly", () => {
//     const resultString = `╔══════════╦══════════╦══════════╗
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░██╗░░██╗░║░██╗░░██╗░║░██╗░░██╗░║
// ║░╚██╗██╔╝░║░╚██╗██╔╝░║░╚██╗██╔╝░║
// ║░░╚███╔╝░░║░░╚███╔╝░░║░░╚███╔╝░░║
// ║░░██╔██╗░░║░░██╔██╗░░║░░██╔██╗░░║
// ║░██╔╝╚██╗░║░██╔╝╚██╗░║░██╔╝╚██╗░║
// ║░╚═╝░░╚═╝░║░╚═╝░░╚═╝░║░╚═╝░░╚═╝░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╚══════════╩══════════╩══════════╝`;
//     let boardWithXInserts = insertLetter(board, { x: 2, y: 0 }, letters["x"]);
//     boardWithXInserts = insertLetter(
//       boardWithXInserts,
//       { x: 1, y: 0 },
//       letters["x"]
//     );
//     boardWithXInserts = insertLetter(
//       boardWithXInserts,
//       { x: 0, y: 0 },
//       letters["x"]
//     );
//     expect(boardWithXInserts).toEqual(resultString);
//   });

//   it("can place ascii art os in the bottom row correctly", () => {
//     const resultString = `╔══════════╦══════════╦══════════╗
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░█████╗░░║░░█████╗░░║░░█████╗░░║
// ║░██╔══██╗░║░██╔══██╗░║░██╔══██╗░║
// ║░██║░░██║░║░██║░░██║░║░██║░░██║░║
// ║░██║░░██║░║░██║░░██║░║░██║░░██║░║
// ║░╚█████╔╝░║░╚█████╔╝░║░╚█████╔╝░║
// ║░░╚════╝░░║░░╚════╝░░║░░╚════╝░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╚══════════╩══════════╩══════════╝`;

//     let boardWithOInserts = insertLetter(board, { x: 2, y: 2 }, letters["o"]);
//     boardWithOInserts = insertLetter(
//       boardWithOInserts,
//       { x: 1, y: 2 },
//       letters["o"]
//     );
//     boardWithOInserts = insertLetter(
//       boardWithOInserts,
//       { x: 0, y: 2 },
//       letters["o"]
//     );
//     expect(boardWithOInserts).toEqual(resultString);
//   });

//   it("can place ascii art os in the middle row correctly", () => {
//     const resultString = `╔══════════╦══════════╦══════════╗
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░█████╗░░║░░█████╗░░║░░█████╗░░║
// ║░██╔══██╗░║░██╔══██╗░║░██╔══██╗░║
// ║░██║░░██║░║░██║░░██║░║░██║░░██║░║
// ║░██║░░██║░║░██║░░██║░║░██║░░██║░║
// ║░╚█████╔╝░║░╚█████╔╝░║░╚█████╔╝░║
// ║░░╚════╝░░║░░╚════╝░░║░░╚════╝░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╚══════════╩══════════╩══════════╝`;
//     let boardWithOInserts = insertLetter(board, { x: 2, y: 1 }, letters["o"]);
//     boardWithOInserts = insertLetter(
//       boardWithOInserts,
//       { x: 1, y: 1 },
//       letters["o"]
//     );
//     boardWithOInserts = insertLetter(
//       boardWithOInserts,
//       { x: 0, y: 1 },
//       letters["o"]
//     );
//     expect(boardWithOInserts).toEqual(resultString);
//   });

//   it("can place ascii art os in the top row correctly", () => {
//     const resultString = `╔══════════╦══════════╦══════════╗
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░█████╗░░║░░█████╗░░║░░█████╗░░║
// ║░██╔══██╗░║░██╔══██╗░║░██╔══██╗░║
// ║░██║░░██║░║░██║░░██║░║░██║░░██║░║
// ║░██║░░██║░║░██║░░██║░║░██║░░██║░║
// ║░╚█████╔╝░║░╚█████╔╝░║░╚█████╔╝░║
// ║░░╚════╝░░║░░╚════╝░░║░░╚════╝░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╚══════════╩══════════╩══════════╝`;
//     let boardWithOInserts = insertLetter(board, { x: 2, y: 0 }, letters["o"]);
//     boardWithOInserts = insertLetter(
//       boardWithOInserts,
//       { x: 1, y: 0 },
//       letters["o"]
//     );
//     boardWithOInserts = insertLetter(
//       boardWithOInserts,
//       { x: 0, y: 0 },
//       letters["o"]
//     );
//     expect(boardWithOInserts).toEqual(resultString);
//   });
// });

// describe("insertSelectBoarder()", () => {
//   it("inserts the bright part of the flashing selection indicator correctly in the bottom row", () => {
//     const resultString = `╔══════════╦══════════╦══════════╗
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ╚══════════╩══════════╩══════════╝`;
//     setSelectorCharacterIndex(0);

//     let boardWithBrightSelector = insertSelectBoarder(board, { x: 2, y: 2 });
//     boardWithBrightSelector = insertSelectBoarder(boardWithBrightSelector, {
//       x: 1,
//       y: 2,
//     });
//     boardWithBrightSelector = insertSelectBoarder(boardWithBrightSelector, {
//       x: 0,
//       y: 2,
//     });
//     expect(boardWithBrightSelector).toEqual(resultString);
//   });

//   it("inserts the bright part of the flashing selection indicator correctly in the middle row", () => {
//     const resultString = `╔══════════╦══════════╦══════════╗
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╚══════════╩══════════╩══════════╝`;
//     setSelectorCharacterIndex(0);

//     let boardWithBrightSelector = insertSelectBoarder(board, { x: 2, y: 1 });
//     boardWithBrightSelector = insertSelectBoarder(boardWithBrightSelector, {
//       x: 1,
//       y: 1,
//     });
//     boardWithBrightSelector = insertSelectBoarder(boardWithBrightSelector, {
//       x: 0,
//       y: 1,
//     });
//     expect(boardWithBrightSelector).toEqual(resultString);
//   });

//   it("inserts the bright part of the flashing selection indicator correctly in the top row", () => {
//     const resultString = `╔══════════╦══════════╦══════════╗
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║▒▒▒▒▒▒▒▒▒▒║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╚══════════╩══════════╩══════════╝`;
//     setSelectorCharacterIndex(0);

//     let boardWithBrightSelector = insertSelectBoarder(board, { x: 2, y: 0 });
//     boardWithBrightSelector = insertSelectBoarder(boardWithBrightSelector, {
//       x: 1,
//       y: 0,
//     });
//     boardWithBrightSelector = insertSelectBoarder(boardWithBrightSelector, {
//       x: 0,
//       y: 0,
//     });
//     expect(boardWithBrightSelector).toEqual(resultString);
//   });

//   it("inserts the dark part of the flashing selection indicator correctly in the bottom row", () => {
//     const resultString = `╔══════════╦══════════╦══════════╗
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║          ║          ║          ║
// ║          ║          ║          ║
// ║          ║          ║          ║
// ║          ║          ║          ║
// ║          ║          ║          ║
// ║          ║          ║          ║
// ║          ║          ║          ║
// ║          ║          ║          ║
// ╚══════════╩══════════╩══════════╝`;
//     setSelectorCharacterIndex(1);

//     let boardWithDarkSelector = insertSelectBoarder(board, { x: 2, y: 2 });
//     boardWithDarkSelector = insertSelectBoarder(boardWithDarkSelector, {
//       x: 1,
//       y: 2,
//     });
//     boardWithDarkSelector = insertSelectBoarder(boardWithDarkSelector, {
//       x: 0,
//       y: 2,
//     });
//     expect(boardWithDarkSelector).toEqual(resultString);
//   });

//   it("inserts the dark part of the flashing selection indicator correctly in the middle row", () => {
//     const resultString = `╔══════════╦══════════╦══════════╗
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║          ║          ║          ║
// ║          ║          ║          ║
// ║          ║          ║          ║
// ║          ║          ║          ║
// ║          ║          ║          ║
// ║          ║          ║          ║
// ║          ║          ║          ║
// ║          ║          ║          ║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╚══════════╩══════════╩══════════╝`;
//     setSelectorCharacterIndex(1);

//     let boardWithDarkSelector = insertSelectBoarder(board, { x: 2, y: 1 });
//     boardWithDarkSelector = insertSelectBoarder(boardWithDarkSelector, {
//       x: 1,
//       y: 1,
//     });
//     boardWithDarkSelector = insertSelectBoarder(boardWithDarkSelector, {
//       x: 0,
//       y: 1,
//     });
//     expect(boardWithDarkSelector).toEqual(resultString);
//   });

//   it("inserts the dark part of the flashing selection indicator correctly in the top row", () => {
//     const resultString = `╔══════════╦══════════╦══════════╗
// ║          ║          ║          ║
// ║          ║          ║          ║
// ║          ║          ║          ║
// ║          ║          ║          ║
// ║          ║          ║          ║
// ║          ║          ║          ║
// ║          ║          ║          ║
// ║          ║          ║          ║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╚══════════╩══════════╩══════════╝`;
//     setSelectorCharacterIndex(1);

//     let boardWithDarkSelector = insertSelectBoarder(board, { x: 2, y: 0 });
//     boardWithDarkSelector = insertSelectBoarder(boardWithDarkSelector, {
//       x: 1,
//       y: 0,
//     });
//     boardWithDarkSelector = insertSelectBoarder(boardWithDarkSelector, {
//       x: 0,
//       y: 0,
//     });
//     expect(boardWithDarkSelector).toEqual(resultString);
//   });

//   it("inserts the bright part of the flashing selection indicator correctly behind letters", () => {
//     const resultString = `╔══════════╦══════════╦══════════╗
// ║░░░░░░░░░░║░░░░░░░░░░║▒▒▒▒▒▒▒▒▒▒║
// ║░░░░░░░░░░║░░░░░░░░░░║▒▒█████╗▒▒║
// ║░░░░░░░░░░║░░░░░░░░░░║▒██╔══██╗▒║
// ║░░░░░░░░░░║░░░░░░░░░░║▒██║▒▒██║▒║
// ║░░░░░░░░░░║░░░░░░░░░░║▒██║▒▒██║▒║
// ║░░░░░░░░░░║░░░░░░░░░░║▒╚█████╔╝▒║
// ║░░░░░░░░░░║░░░░░░░░░░║▒▒╚════╝▒▒║
// ║░░░░░░░░░░║░░░░░░░░░░║▒▒▒▒▒▒▒▒▒▒║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╚══════════╩══════════╩══════════╝`;
//     setSelectorCharacterIndex(0);
//     let boardWithBrightSelectorBehindLetter = insertLetter(
//       board,
//       { x: 2, y: 0 },
//       letters["o"]
//     );
//     boardWithBrightSelectorBehindLetter = insertSelectBoarder(
//       boardWithBrightSelectorBehindLetter,
//       { x: 2, y: 0 }
//     );
//     expect(boardWithBrightSelectorBehindLetter).toEqual(resultString);
//   });

//   it("inserts the dark part of the flashing selection indicator correctly behind letters", () => {
//     const resultString = `╔══════════╦══════════╦══════════╗
// ║░░░░░░░░░░║░░░░░░░░░░║          ║
// ║░░░░░░░░░░║░░░░░░░░░░║  █████╗  ║
// ║░░░░░░░░░░║░░░░░░░░░░║ ██╔══██╗ ║
// ║░░░░░░░░░░║░░░░░░░░░░║ ██║  ██║ ║
// ║░░░░░░░░░░║░░░░░░░░░░║ ██║  ██║ ║
// ║░░░░░░░░░░║░░░░░░░░░░║ ╚█████╔╝ ║
// ║░░░░░░░░░░║░░░░░░░░░░║  ╚════╝  ║
// ║░░░░░░░░░░║░░░░░░░░░░║          ║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╚══════════╩══════════╩══════════╝`;
//     setSelectorCharacterIndex(1);
//     let boardWithDarkSelectorBehindLetter = insertLetter(
//       board,
//       { x: 2, y: 0 },
//       letters["o"]
//     );
//     boardWithDarkSelectorBehindLetter = insertSelectBoarder(
//       boardWithDarkSelectorBehindLetter,
//       { x: 2, y: 0 }
//     );
//     expect(boardWithDarkSelectorBehindLetter).toEqual(resultString);
//   });
// });

// describe("insertBoardState()", () => {
//   it("insters letters in the correct positions given an array with letter placement information", () => {
//     const resultString = `╔══════════╦══════════╦══════════╗
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░█████╗░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░██╔══██╗░║
// ║░░░░░░░░░░║░░░░░░░░░░║░██║░░██║░║
// ║░░░░░░░░░░║░░░░░░░░░░║░██║░░██║░║
// ║░░░░░░░░░░║░░░░░░░░░░║░╚█████╔╝░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░╚════╝░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░██╗░░██╗░║░██╗░░██╗░║░░░░░░░░░░║
// ║░╚██╗██╔╝░║░╚██╗██╔╝░║░░░░░░░░░░║
// ║░░╚███╔╝░░║░░╚███╔╝░░║░░░░░░░░░░║
// ║░░██╔██╗░░║░░██╔██╗░░║░░░░░░░░░░║
// ║░██╔╝╚██╗░║░██╔╝╚██╗░║░░░░░░░░░░║
// ║░╚═╝░░╚═╝░║░╚═╝░░╚═╝░║░░░░░░░░░░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╠══════════╬══════════╬══════════╣
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ║░░█████╗░░║░░█████╗░░║░██╗░░██╗░║
// ║░██╔══██╗░║░██╔══██╗░║░╚██╗██╔╝░║
// ║░██║░░██║░║░██║░░██║░║░░╚███╔╝░░║
// ║░██║░░██║░║░██║░░██║░║░░██╔██╗░░║
// ║░╚█████╔╝░║░╚█████╔╝░║░██╔╝╚██╗░║
// ║░░╚════╝░░║░░╚════╝░░║░╚═╝░░╚═╝░║
// ║░░░░░░░░░░║░░░░░░░░░░║░░░░░░░░░░║
// ╚══════════╩══════════╩══════════╝`;

//     const boardState = insertBoardState(
//       [
//         ["blank", "blank", "o"],
//         ["x", "x", "blank"],
//         ["o", "o", "x"],
//       ],
//       board
//     );
//     expect(boardState).toEqual(resultString);
//   });
// });
